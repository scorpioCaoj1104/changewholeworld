<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanz.stuspringbootdemo.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.hanz.stuspringbootdemo.domain.Role">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <!--<collection property="permissions" column="id"-->
        <!--select="com.hanz.stuspringbootdemo.dao.PermissionMapper.selectPermissionByRoleId" />-->
    </resultMap>
    <sql id="Base_Column_List">
    id, role_name, user_id
  </sql>
    <select id="selectRoleByUserId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from role
        where user_id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from role
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.hanz.stuspringbootdemo.domain.Role">
    insert into role (id, role_name, user_id
      )
    values (#{id,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.hanz.stuspringbootdemo.domain.Role">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hanz.stuspringbootdemo.domain.Role">
        update role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hanz.stuspringbootdemo.domain.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="getRolesByUserName" resultMap="BaseResultMap"
            parameterType="java.lang.String">
    select
    r.id,r.role_name,r.user_id
    from role r inner  join user u on r.user_id = u.id
    where u.name = #{username}
  </select>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hanz.stuspringbootdemo.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.hanz.stuspringbootdemo.domain.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sal" property="sal" jdbcType="DOUBLE"/>
        <!--<collection property="roles" column="id"-->
                    <!--select="com.hanz.stuspringbootdemo.dao.RoleMapper.selectRoleByUserId" />-->
    </resultMap>
    <sql id="Base_Column_List">
    id, name,password, sal
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.hanz.stuspringbootdemo.domain.User">
    insert into user (id, name,password, sal
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR}, #{sal,jdbcType=DOUBLE}
      )
  </insert>

    <update id="updateByPrimaryKey" parameterType="com.hanz.stuspringbootdemo.domain.User">
    update user
    set name = #{name,jdbcType=VARCHAR},
      sal = #{sal,jdbcType=DOUBLE},
      password = #{password,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>